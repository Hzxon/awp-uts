<%- include('../partials/header', {title: 'Belajar dengan AI'}) %>

<div class="flex h-screen bg-gray-100">
    <%- include('../partials/sidebar', {user: user, active: 'belajar-ai'}) %>
    
    <!-- Main Content -->
    <div class="flex-1 flex flex-col overflow-hidden">
        <%- include('../partials/topbar', {user: user, pageTitle: 'Belajar dengan AI'}) %>

        <% const initialMaterial = (() => {
            if (!materials || !materials.length) return null;
            const selectedId = typeof selectedMaterialId !== 'undefined' ? selectedMaterialId : null;
            if (!selectedId) return materials[0];
            return materials.find((material) => material.id === selectedId) || materials[0];
        })(); %>
        <% const alerts = {
            error: (typeof queryError !== 'undefined') ? queryError : (typeof error !== 'undefined' ? error : null),
            success: (typeof querySuccess !== 'undefined') ? querySuccess : (typeof success !== 'undefined' ? success : null)
        }; %>
        <main class="flex-1 p-4 overflow-hidden space-y-4">
            <div class="flex flex-col md:flex-row md:items-center md:justify-between gap-3">
                <div>
                    <h2 class="text-lg font-semibold text-gray-800">Pilih Materi dan Mulai Belajar</h2>
                    <p class="text-sm text-gray-500">Ganti materi kapan saja, lalu ajukan pertanyaan ke AI assistant.</p>
                </div>
                <a href="/belajar-ai/materials/new" class="inline-flex items-center justify-center px-4 py-2 text-sm font-medium text-white bg-purple-600 rounded-lg hover:bg-purple-700">
                    <i data-lucide="book-plus" class="w-4 h-4 mr-2"></i> Tambah Materi
                </a>
            </div>

            <% if (successMessage) { %>
                <div class="bg-emerald-100 border border-emerald-200 text-emerald-700 px-4 py-3 rounded-lg">
                    <p class="text-sm font-medium"><%= successMessage %></p>
                </div>
            <% } %>

            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 h-[calc(100%-5rem)] md:h-[calc(100%-4rem)]">
            <div class="flex flex-col bg-white rounded-xl shadow-md overflow-hidden">
                <div class="p-4 border-b">
                    <h2 class="font-semibold text-lg flex items-center"><i data-lucide="book-marked" class="w-5 h-5 mr-2 text-blue-600"></i> Sumber Materi</h2>
                    <p id="material-description" class="mt-1 text-sm text-gray-500"><%= initialMaterial ? initialMaterial.description : 'Belum ada materi yang tersedia.' %></p>
                    <div class="mt-3">
                        <label for="material-selector" class="text-sm font-medium text-gray-600">Pilih Materi:</label>
                        <select id="material-selector" class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md" <%= !initialMaterial ? 'disabled' : '' %>>
                            <% if (materials && materials.length) { %>
                                <% materials.forEach((material) => { %>
                                    <option value="<%= material.id %>"><%= material.title %></option>
                                <% }) %>
                            <% } else { %>
                                <option>Belum ada materi</option>
                            <% } %>
                        </select>
                        <p id="material-theme" class="mt-2 inline-flex items-center px-2 py-1 text-xs font-semibold text-blue-700 bg-blue-100 rounded-full">
                            <%= initialMaterial ? initialMaterial.theme : 'N/A' %>
                        </p>
                    </div>
                </div>
                <div id="source-text" class="p-4 overflow-y-auto text-sm text-gray-700 leading-relaxed whitespace-pre-line"><%= initialMaterial ? initialMaterial.sourceText : 'Silakan tambahkan materi terlebih dahulu.' %></div>
            </div>

            <!-- Kolom Chat AI -->
            <div class="flex flex-col bg-white rounded-xl shadow-md overflow-hidden">
                <div class="p-4 border-b">
                     <h2 class="font-semibold text-lg flex items-center"><i data-lucide="bot" class="w-5 h-5 mr-2 text-green-600"></i> Asisten Belajar AI</h2>
                     <!-- Dropdown untuk memilih Gem/Persona -->
                     <div class="mt-2">
                         <label for="gem-selector" class="text-sm font-medium text-gray-600">Pilih Persona AI:</label>
                         <select id="gem-selector" class="mt-1 block w-full pl-3 pr-10 py-2 text-base border-gray-300 focus:outline-none focus:ring-blue-500 focus:border-blue-500 sm:text-sm rounded-md">
                             <% for (const key in gems) { %>
                                <option value="<%= key %>"><%= gems[key].name %></option>
                             <% } %>
                         </select>
                     </div>
                </div>
                <div id="chat-history" class="flex-1 p-4 overflow-y-auto space-y-4">
                    <!-- Pesan Awal dari AI -->
                    <div class="flex items-start gap-3">
                        <div class="p-2 bg-green-100 rounded-full"><i data-lucide="bot" class="w-5 h-5 text-green-700"></i></div>
                        <div class="bg-gray-100 p-3 rounded-lg max-w-lg">
                            <p class="text-sm">Halo! Saya adalah asisten AI Anda. Silakan pilih persona saya di atas, baca materi, dan ajukan pertanyaan apa pun yang Anda miliki.</p>
                        </div>
                    </div>
                </div>
                <div class="p-4 border-t bg-gray-50">
                    <form id="chat-form" class="flex items-center gap-2">
                        <input id="chat-input" type="text" placeholder="Ketik pertanyaan Anda di sini..." class="w-full px-4 py-2 border rounded-lg focus:ring-blue-500 focus:border-blue-500" required>
                        <button type="submit" id="chat-submit-button" class="px-4 py-2 font-semibold text-white bg-blue-600 rounded-lg hover:bg-blue-700 disabled:bg-gray-400">
                            <i data-lucide="send" class="w-5 h-5"></i>
                        </button>
                    </form>
                </div>
            </div>
            </div>
        </main>
    </div>
</div>

<script>
    const materialsData = <%- JSON.stringify(materials || []) %>;
    const chatForm = document.getElementById('chat-form');
    const chatInput = document.getElementById('chat-input');
    const chatHistory = document.getElementById('chat-history');
    const sourceTextContainer = document.getElementById('source-text');
    const submitButton = document.getElementById('chat-submit-button');
    const gemSelector = document.getElementById('gem-selector');
    const materialSelector = document.getElementById('material-selector');
    const materialDescription = document.getElementById('material-description');
    const materialTheme = document.getElementById('material-theme');

    function renderMaterial(materialId) {
        const material = materialsData.find((item) => item.id === materialId);
        if (!material) {
            sourceTextContainer.textContent = 'Materi tidak ditemukan.';
            materialDescription.textContent = 'Belum ada materi yang dipilih.';
            materialTheme.textContent = 'N/A';
            materialTheme.className = 'mt-2 inline-flex items-center px-2 py-1 text-xs font-semibold text-gray-600 bg-gray-200 rounded-full';
            return;
        }
        sourceTextContainer.textContent = material.sourceText;
        materialDescription.textContent = material.description;
        materialTheme.textContent = material.theme;
        materialTheme.className = 'mt-2 inline-flex items-center px-2 py-1 text-xs font-semibold text-blue-700 bg-blue-100 rounded-full';
    }

    if (materialsData.length && materialSelector) {
        renderMaterial(materialSelector.value);
        materialSelector.addEventListener('change', () => {
            renderMaterial(materialSelector.value);
            resetChatHistory();
        });
    }

    chatForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        const question = chatInput.value.trim();
        if (!question) return;

        if (!materialsData.length) {
            appendMessage('Belum ada materi yang dapat dipelajari saat ini.', 'ai');
            return;
        }

        const gem = gemSelector.value; 
        const materialId = materialSelector.value;
        
        appendMessage(question, 'user');
        chatInput.value = '';
        submitButton.disabled = true;
        
        appendMessage('...', 'ai', true);

        try {
            const response = await fetch('/api/ask-ai', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({ materialId, question, gem }) 
            });

            removeLoadingIndicator();

            if (!response.ok) {
                const errorData = await response.json();
                throw new Error(errorData.error || 'Gagal mendapatkan jawaban dari AI.');
            }

            const data = await response.json();
            appendMessage(data.answer, 'ai');

        } catch (error) {
            removeLoadingIndicator();
            appendMessage(`Error: ${error.message}`, 'ai');
        } finally {
            submitButton.disabled = false;
        }
    });

    function resetChatHistory() {
        chatHistory.innerHTML = '';
        appendMessage('Halo! Saya adalah asisten AI Anda. Silakan pilih persona, baca materi, dan ajukan pertanyaan apa pun yang Anda miliki.', 'ai');
    }

    function appendMessage(text, sender, isLoading = false) {
        const messageWrapper = document.createElement('div');
        const iconDiv = document.createElement('div');
        const textDiv = document.createElement('div');
        
        if (sender === 'user') {
            messageWrapper.className = 'flex items-start gap-3 justify-end';
            iconDiv.className = 'p-2 bg-blue-100 rounded-full';
            iconDiv.innerHTML = `<i data-lucide="user" class="w-5 h-5 text-blue-700"></i>`;
            textDiv.className = 'bg-blue-500 text-white p-3 rounded-lg max-w-lg';
            textDiv.innerText = text;
        } else {
            messageWrapper.className = 'flex items-start gap-3';
            if(isLoading) messageWrapper.id = 'loading-indicator';
            iconDiv.className = 'p-2 bg-green-100 rounded-full';
            iconDiv.innerHTML = `<i data-lucide="bot" class="w-5 h-5 text-green-700"></i>`;
            textDiv.className = 'bg-gray-100 p-3 rounded-lg max-w-lg';
            textDiv.innerHTML = isLoading ? `<div class="dot-flashing"></div>` : text.replace(/\n/g, '<br>');
        }

        if (sender === 'user') {
            messageWrapper.appendChild(textDiv);
            messageWrapper.appendChild(iconDiv);
        } else {
            messageWrapper.appendChild(iconDiv);
            messageWrapper.appendChild(textDiv);
        }
        chatHistory.appendChild(messageWrapper);
        lucide.createIcons();
        chatHistory.scrollTop = chatHistory.scrollHeight;
    }
    
    function removeLoadingIndicator() {
        const loadingIndicator = document.getElementById('loading-indicator');
        if (loadingIndicator) {
            loadingIndicator.remove();
        }
    }
</script>

<style>
.dot-flashing { position: relative; width: 10px; height: 10px; border-radius: 5px; background-color: #9880ff; color: #9880ff; animation: dot-flashing 1s infinite linear alternate; animation-delay: .5s; }
.dot-flashing::before, .dot-flashing::after { content: ''; display: inline-block; position: absolute; top: 0; }
.dot-flashing::before { left: -15px; width: 10px; height: 10px; border-radius: 5px; background-color: #9880ff; color: #9880ff; animation: dot-flashing 1s infinite alternate; animation-delay: 0s; }
.dot-flashing::after { left: 15px; width: 10px; height: 10px; border-radius: 5px; background-color: #9880ff; color: #9880ff; animation: dot-flashing 1s infinite alternate; animation-delay: 1s; }
@keyframes dot-flashing { 0% { background-color: #5C6BC0; } 50%, 100% { background-color: #CFD8DC; } }
</style>

<%- include('../partials/footer') %>
